name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        java: [17, 21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: maven
    
    - name: Run tests
      run: mvn clean test
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java-${{ matrix.java }}
        path: target/surefire-reports/

  build:
    runs-on: ubuntu-22.04
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Get version
      id: version
      run: |
        echo "GITHUB_REF $GITHUB_REF"
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)-${GITHUB_SHA::8}
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Building version: $VERSION"
    
    - name: Build plugin
      run: |
        mvn clean package -DskipTests
        mv target/*.hpi target/sql-plugin-${{ steps.version.outputs.VERSION }}.hpi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jenkins-plugin
        path: |
          target/*.hpi
          target/*.jar
    
    - name: Upload HPI file
      uses: actions/upload-artifact@v4
      with:
        name: sql-plugin-hpi
        path: target/sql-plugin-*.hpi

  release:
    runs-on: ubuntu-22.04
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: sql-plugin-hpi
        path: ./artifacts
    
    - name: Get version and changelog
      id: release_info
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
        # Extract changelog for this version if CHANGELOG.md exists
        if [ -f CHANGELOG.md ]; then
          sed -n "/## \[${VERSION}\]/,/## \[/p" CHANGELOG.md | sed '$d' > release_notes.md
        else
          echo "Release $VERSION" > release_notes.md
          echo "" >> release_notes.md
          echo "## Changes" >> release_notes.md
          echo "- Built from commit ${{ github.sha }}" >> release_notes.md
        fi
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release v${{ steps.release_info.outputs.VERSION }}
        body_path: release_notes.md
        files: |
          ./artifacts/*.hpi
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Deploy to Jenkins Update Center (for official plugins)
#   deploy:
#     runs-on: ubuntu-22.04
#     needs: [test, build]
#     if: github.ref == 'refs/heads/main'
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
    
#     - name: Set up JDK 11
#       uses: actions/setup-java@v4
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         cache: maven
    
#     - name: Deploy to staging
#       run: |
#         echo "Deploying to staging environment..."
#         # Add your staging deployment commands here
#         # mvn deploy -DskipTests -s settings.xml
    
#     # Uncomment and configure for official Jenkins plugin deployment
#     # - name: Deploy to Jenkins Update Center
#     #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#     #   run: |
#     #     mvn deploy -DskipTests
#     #   env:
#     #     MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
#     #     MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
